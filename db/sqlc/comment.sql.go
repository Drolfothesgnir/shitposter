// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: comment.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createComment = `-- name: CreateComment :one
SELECT id, user_id, post_id, path, depth, upvotes, downvotes, body, created_at, last_modified FROM insert_comment(
  p_user_id := $1,
  p_post_id := $2,
  p_parent_path := $4,
  p_body := $3
)
`

type CreateCommentParams struct {
	PUserID     int64       `json:"p_user_id"`
	PPostID     int64       `json:"p_post_id"`
	PBody       string      `json:"p_body"`
	PParentPath pgtype.Text `json:"p_parent_path"`
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRow(ctx, createComment,
		arg.PUserID,
		arg.PPostID,
		arg.PBody,
		arg.PParentPath,
	)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.PostID,
		&i.Path,
		&i.Depth,
		&i.Upvotes,
		&i.Downvotes,
		&i.Body,
		&i.CreatedAt,
		&i.LastModified,
	)
	return i, err
}
