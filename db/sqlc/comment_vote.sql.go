// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: comment_vote.sql

package db

import (
	"context"
)

const getCommentVote = `-- name: GetCommentVote :one
SELECT id, user_id, comment_id, vote, created_at, last_modified_at from comment_votes
WHERE user_id = $1 AND comment_id = $2
LIMIT 1
`

type GetCommentVoteParams struct {
	UserID    int64 `json:"user_id"`
	CommentID int64 `json:"comment_id"`
}

func (q *Queries) GetCommentVote(ctx context.Context, arg GetCommentVoteParams) (CommentVote, error) {
	row := q.db.QueryRow(ctx, getCommentVote, arg.UserID, arg.CommentID)
	var i CommentVote
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.CommentID,
		&i.Vote,
		&i.CreatedAt,
		&i.LastModifiedAt,
	)
	return i, err
}
