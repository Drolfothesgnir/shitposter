Project shitposter {
  database_type: 'PostgreSQL'
  Note: '''
    # Shitposter one-for-all database
  '''
}

// TODO: define more indexes

Table users as U {
  id bigserial [pk]
  username varchar [not null, unique]
  profile_img_url varchar [not null]
  hashed_password varchar [not null]
  email varchar [unique, not null]
  is_email_verified bool [not null, default: false]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]
}

Table sessions {
  id uuid [pk]
  user_id bigserial [not null, ref: > U.id]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: false]
  expires_at timestamptz [not null]
  created_at timestamptz [not null, default: `now()`]

  Indexes {
    user_id
    expires_at
  }
}

Table verification_emails {
  id bigserial [pk]
  user_id bigserial [not null, ref: > U.id]
  email varchar [not null]
  secret_code varchar [not null]
  is_used bool [not null, default: false]
  created_at timestamptz [not null, default: `now()`]
  expires_at timestamptz [not null, default: `now() + interval '15 minutes'`]

  Indexes {
    expires_at
    (user_id, secret_code)
  }
}

Table posts as P {
  id bigserial [pk]
  user_id bigserial [not null, ref: > U.id]
  title varchar [not null]
  topics jsonb 
  body jsonb [not null]
  upvotes bigint [not null, default: 0]
  downvotes bigint [not null, default: 0]
  created_at timestamptz [not null, default: `now()`]
  last_modified_at timestamptz [not null, default: `now()`]

  Indexes {
    user_id
    topics [type: gin]
  }
}

Table comments as C {
  id bigserial [pk]
  user_id bigserial [not null, ref: > U.id]
  post_id bigserial [not null]
  path ltree [not null]
  depth int [not null, default: 0]
  upvotes bigint [not null, default: 0]
  downvotes bigint [not null, default: 0]
  body text [not null]
  created_at timestamptz [not null, default: `now()`]
  last_modified_at timestamptz [not null, default: `now()`]

  Indexes {
    user_id
    post_id
    path [type: gist]
    (path, depth)
  }
}

Table post_votes as PV {
  id bigserial [pk]
  user_id bigserial [not null]
  post_id bigserial [not null]
  vote int8 [not null, note: "1 for upvote, -1 for downvote"]
  created_at timestamptz [not null, default: `now()`]
  last_modified_at timestamptz [not null, default: `now()`]

  Indexes {
    (user_id, post_id) [unique]
  }
}

Table comment_votes as CV {
  id bigserial [pk]
  user_id bigserial [not null]
  comment_id bigserial [not null]
  vote int8 [not null, note: "1 for upvote, -1 for downvote"]
  created_at timestamptz [not null, default: `now()`]
  last_modified_at timestamptz [not null, default: `now()`]

  Indexes {
    (user_id, comment_id) [unique]
  }
}

Ref {
  C.post_id > P.id [delete: cascade]
}

Ref {
  PV.user_id > U.id [delete: cascade]
}

Ref {
  CV.user_id > U.id [delete: cascade]
}

Ref {
  PV.post_id > P.id [delete: cascade]
}

Ref {
  CV.comment_id > C.id [delete: cascade]
}
