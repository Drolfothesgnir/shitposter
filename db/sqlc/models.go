// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Comment struct {
	ID             int64       `json:"id"`
	UserID         int64       `json:"user_id"`
	PostID         int64       `json:"post_id"`
	ParentID       pgtype.Int8 `json:"parent_id"`
	Depth          int32       `json:"depth"`
	Upvotes        int64       `json:"upvotes"`
	Downvotes      int64       `json:"downvotes"`
	Body           string      `json:"body"`
	CreatedAt      time.Time   `json:"created_at"`
	LastModifiedAt time.Time   `json:"last_modified_at"`
	IsDeleted      bool        `json:"is_deleted"`
	DeletedAt      time.Time   `json:"deleted_at"`
	Popularity     pgtype.Int8 `json:"popularity"`
}

type CommentVote struct {
	ID        int64 `json:"id"`
	UserID    int64 `json:"user_id"`
	CommentID int64 `json:"comment_id"`
	// 1 for upvote, -1 for downvote
	Vote           int16     `json:"vote"`
	CreatedAt      time.Time `json:"created_at"`
	LastModifiedAt time.Time `json:"last_modified_at"`
}

type Post struct {
	ID             int64       `json:"id"`
	UserID         int64       `json:"user_id"`
	Title          string      `json:"title"`
	Topics         []byte      `json:"topics"`
	Body           []byte      `json:"body"`
	Upvotes        int64       `json:"upvotes"`
	Downvotes      int64       `json:"downvotes"`
	CreatedAt      time.Time   `json:"created_at"`
	LastModifiedAt time.Time   `json:"last_modified_at"`
	Popularity     pgtype.Int8 `json:"popularity"`
}

type PostVote struct {
	ID     int64 `json:"id"`
	UserID int64 `json:"user_id"`
	PostID int64 `json:"post_id"`
	// 1 for upvote, -1 for downvote
	Vote           int16     `json:"vote"`
	CreatedAt      time.Time `json:"created_at"`
	LastModifiedAt time.Time `json:"last_modified_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type User struct {
	ID                 int64       `json:"id"`
	Username           string      `json:"username"`
	WebauthnUserHandle []byte      `json:"webauthn_user_handle"`
	ProfileImgUrl      pgtype.Text `json:"profile_img_url"`
	Email              string      `json:"email"`
	CreatedAt          time.Time   `json:"created_at"`
}

type WebauthnCredential struct {
	ID         []byte             `json:"id"`
	UserID     int64              `json:"user_id"`
	PublicKey  []byte             `json:"public_key"`
	SignCount  int64              `json:"sign_count"`
	Transports []byte             `json:"transports"`
	CreatedAt  time.Time          `json:"created_at"`
	LastUsedAt pgtype.Timestamptz `json:"last_used_at"`
}
