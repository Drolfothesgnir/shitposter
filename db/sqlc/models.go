// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Comment struct {
	ID             int64       `json:"id"`
	UserID         int64       `json:"user_id"`
	PostID         int64       `json:"post_id"`
	ParentID       pgtype.Int8 `json:"parent_id"`
	Depth          int32       `json:"depth"`
	Upvotes        int64       `json:"upvotes"`
	Downvotes      int64       `json:"downvotes"`
	Body           string      `json:"body"`
	CreatedAt      time.Time   `json:"created_at"`
	LastModifiedAt time.Time   `json:"last_modified_at"`
	Popularity     pgtype.Int8 `json:"popularity"`
}

type CommentVote struct {
	ID        int64 `json:"id"`
	UserID    int64 `json:"user_id"`
	CommentID int64 `json:"comment_id"`
	// 1 for upvote, -1 for downvote
	Vote           int64     `json:"vote"`
	CreatedAt      time.Time `json:"created_at"`
	LastModifiedAt time.Time `json:"last_modified_at"`
}

type Post struct {
	ID             int64     `json:"id"`
	UserID         int64     `json:"user_id"`
	Title          string    `json:"title"`
	Topics         []byte    `json:"topics"`
	Body           []byte    `json:"body"`
	Upvotes        int64     `json:"upvotes"`
	Downvotes      int64     `json:"downvotes"`
	CreatedAt      time.Time `json:"created_at"`
	LastModifiedAt time.Time `json:"last_modified_at"`
}

type PostVote struct {
	ID     int64 `json:"id"`
	UserID int64 `json:"user_id"`
	PostID int64 `json:"post_id"`
	// 1 for upvote, -1 for downvote
	Vote           int64     `json:"vote"`
	CreatedAt      time.Time `json:"created_at"`
	LastModifiedAt time.Time `json:"last_modified_at"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type User struct {
	ID                int64     `json:"id"`
	Username          string    `json:"username"`
	ProfileImgUrl     string    `json:"profile_img_url"`
	HashedPassword    string    `json:"hashed_password"`
	Email             string    `json:"email"`
	IsEmailVerified   bool      `json:"is_email_verified"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	CreatedAt         time.Time `json:"created_at"`
}

type VerificationEmail struct {
	ID         int64     `json:"id"`
	UserID     int64     `json:"user_id"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
	IsUsed     bool      `json:"is_used"`
	CreatedAt  time.Time `json:"created_at"`
	ExpiresAt  time.Time `json:"expires_at"`
}
